# -*- mode: ruby -*-
# vi: set ft=ruby :
Vagrant.configure("2") do |config|
    config.vm.box = "generic/ubuntu2004"
    config.vm.hostname = "engine"
    config.vm.define "engine" do |engine|
    end
    config.vm.network "public_network"
    config.vm.synced_folder ".", "/vagrant", disabled: true

    config.vm.provider "libvirt" do |vm|
        vm.cpus = 8
        vm.memory = 8192
    end

    config.vm.provider "virtualbox" do |vm|
        vm.name = "engine"
        vm.check_guest_additions = false
        vm.memory = 8192
        vm.cpus = 8
    end

    config.vm.provider "hyperv" do |h|
        h.vmname = "engine"
        h.enable_checkpoints = true
        h.enable_automatic_checkpoints = true
        h.enable_enhanced_session_mode = true
        h.memory = 8192
        h.maxmemory = 8192
        h.cpus = 8
    end

    config.ssh.forward_agent = true

    config.vm.provision "engineFirstRun", type: "shell", inline: <<-SHELL

        echo "Installing dependencies to build the engine"

        #Dependencies
        add-apt-repository ppa:rmescandon/yq -y
        apt-get update
        apt-get install build-essential dkms linux-headers-$(uname -r) gcc g++ make libc6-dev automake autoconf gnupg apt-transport-https libtool libssl-dev jq yq tig linux-tools-common linux-tools-generic linux-tools-`uname -r` bpfcc-tools sysstat python3-pip -y

        #CMake 3.24 installation from its release page
        curl -sL https://github.com/Kitware/CMake/releases/download/v3.24.2/cmake-3.24.2-linux-x86_64.tar.gz | tar -xz -C /usr/local --strip-components=1
        export PATH=$PATH:/usr/local/bin

        echo "--- Downlading the engine from github ---"
        apt-get update
        su vagrant -c "mkdir engine"
        cd engine
        su vagrant -c "git clone --branch 11334-dev-new-wazuh-engine  https://github.com/wazuh/wazuh.git"
        # Make symbolic link to the engine folder
        su vagrant -c "cd && ln -s engine/wazuh/src/engine/ project"
        cd wazuh/src/engine
        su vagrant -c "mkdir build"
        ENGINE_SRC_DIR=$(pwd)

        # Install engine-schema python script
        pip3 install --system $ENGINE_SRC_DIR/test/scripts/engine-suite

        # Add autocompletion to profile
        echo "source $ENGINE_SRC_DIR/test/scripts/vagrant/autocompletion.sh" >> /etc/profile

        echo "--- Building the engine from its source code ---"
        ulimit -s unlimited
        su vagrant -c "cmake -S . -B build/"
        su vagrant -c "cmake --build build/ --config Debug --target main -j $(nproc)"

        #check if main was built, if not throw error
        if [ ! -f ./build/main ]; then
            echo "* ERROR BUILDING ENGINE *"
            exit -1
        fi

        # Get IP Address
        ip="127.0.0.1"
        echo "--- Setting up Wazuh in $ip ---"
        WAZUH_INSTALL=/home/vagrant/wazuh-install
        mkdir -p  $WAZUH_INSTALL && cd $WAZUH_INSTALL
        #Download the Wazuh installation assistant: TODO: Check 4.4 when Release available
        curl -sO https://packages.wazuh.com/4.4/wazuh-install.sh
        curl -sO https://packages.wazuh.com/4.4/config.yml
        sed -E -i "s/ ip: <indexer-node-ip>/ ip: $ip/gm" config.yml
        sed -E -i "s/ ip: <wazuh-manager-ip>/ ip: $ip/gm" config.yml
        sed -E -i "s/ ip: <dashboard-node-ip>/ ip: $ip/gm" config.yml
        bash wazuh-install.sh --generate-config-files
        bash wazuh-install.sh -a

        #Change password to admin/wazuhEngine5+ because it must have lower, uper, numbers and symbol
        /usr/share/wazuh-indexer/plugins/opensearch-security/tools/wazuh-passwords-tool.sh -u admin -p "wazuhEngine5+"

        #Replace filebeat & elastic for engine
        cd $HOME
        cp $ENGINE_SRC_DIR/extension/elasticsearch/7.x/wazuh-template.json /etc/filebeat/
        cp $ENGINE_SRC_DIR/extension/filebeat/7.x/filebeat.yml /etc/filebeat/

        # Create index pattern
        echo "--- Setting up dashboards index pattern  ---"
        sudo curl -s --cacert /etc/filebeat/certs/root-ca.pem -u 'admin:wazuhEngine5+' -X POST "https://127.0.0.1/api/saved_objects/index-pattern/wazuh-alerts-5x-*" -H 'osd-xsrf: true' -H 'Content-Type: application/json' -d   '{"attributes": {"title": "wazuh-alerts-5.x-*", "timeFieldName": "@timestamp" }}'

        systemctl restart filebeat.service

        WAZUH_DIR=/var/ossec
        ENGINE_DIR=$WAZUH_DIR/engine

        echo "--- Setting up the engine ---"
        systemctl stop wazuh-manager
        rm $WAZUH_DIR/queue/sockets/queue
        mkdir -p $ENGINE_DIR/store/schema
        mkdir $WAZUH_DIR/etc/kvdb/
        mkdir $WAZUH_DIR/etc/kvdb_test/
        # Copy needed files in the store so the engine can start
        mkdir $ENGINE_DIR/store/schema/wazuh-logpar-types
        cp $ENGINE_SRC_DIR/ruleset/schemas/wazuh-logpar-types.json $ENGINE_DIR/store/schema/wazuh-logpar-types/0
        mkdir $ENGINE_DIR/store/schema/wazuh-asset
        cp $ENGINE_SRC_DIR/ruleset/schemas/wazuh-asset.json $ENGINE_DIR/store/schema/wazuh-asset/0
        mkdir $ENGINE_DIR/store/schema/wazuh-environment
        cp $ENGINE_SRC_DIR/ruleset/schemas/wazuh-environment.json $ENGINE_DIR/store/schema/wazuh-environment/0

        echo "--- Enabling the engine ---"
        cp $ENGINE_SRC_DIR/build/main $ENGINE_DIR/wazuh-engine
        chmod 755 $ENGINE_DIR/wazuh-engine
        cp $ENGINE_SRC_DIR/test/scripts/vagrant/wazuh-bin-engine.sh $WAZUH_DIR/bin/wazuh-engine
        chmod 755 $WAZUH_DIR/bin/wazuh-engine
        chown -R wazuh:wazuh $ENGINE_DIR
        chown wazuh:wazuh $WAZUH_DIR/bin/wazuh-engine
        sed -e "s/'wazuh-analysisd', //g" -i $(find $WAZUH_DIR -name dapi.py | grep python)
        sed -e "s/wazuh-analysisd /wazuh-engine /g" -i $WAZUH_DIR/bin/wazuh-control
        systemctl restart wazuh-manager

        sleep 2s

        echo "--- Loading ruleset & enabling wazuh environment  ---"
        cd $ENGINE_SRC_DIR/ruleset/wazuh-core
        engine-integration add
        cd $HOME
        echo "Creating default policy..."
        $ENGINE_DIR/wazuh-engine catalog create policy < $ENGINE_SRC_DIR/ruleset/default-policy.yml
        echo "Enabling default environment..."
        $ENGINE_DIR/wazuh-engine router add default filter/allow-all/0 255 policy/wazuh/0
        cp -r $WAZUH_DIR/etc/kvdb/* $WAZUH_DIR/etc/kvdb_test/
        echo

        # Create folder for engine core dumps
        mkdir -p /coredumps

        # Install code-server
        CS_USER=vagrant
        CS_HOME=/home/$CS_USER
        curl -fsSL https://code-server.dev/install.sh | sh

        # Create base config
        systemctl enable --now code-server@$CS_USER
        sleep 4s

        # set config files
        sed -i 's/code-server/code-server \\/home\\/vagrant\\/engine\\/wazuh\\/src\\/engine/g'    /lib/systemd/system/code-server@.service
        systemctl daemon-reload
        echo "bind-addr: 0.0.0.0:8040" | tee  $CS_HOME/.config/code-server/config.yaml
        echo "auth: password"  | tee -a  $CS_HOME/.config/code-server/config.yaml
        echo "password: wazuhEngine5+" | tee -a  $CS_HOME/.config/code-server/config.yaml
        echo "cert: false" | tee -a  $CS_HOME/.config/code-server/config.yaml
        systemctl restart code-server@$CS_USER

        # Install and configs extensions
        mkdir $CS_HOME/engine/wazuh/src/engine/.vscode
        # extension: redhat yml
        su - vagrant -c 'code-server --install-extension redhat.vscode-yaml'
        # code-server --install-extension redhat.vscode-yaml
        cat $CS_HOME/engine/wazuh/src/engine/test/scripts/vagrant/vscode-settings.json | tee $CS_HOME/engine/wazuh/src/engine/.vscode/settings.json

        chown -R $CS_USER:$CS_USER $CS_HOME/
    SHELL

end
